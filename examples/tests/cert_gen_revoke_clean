#!/usr/bin/env bash
#
# cert_gen_revoke_clean
#
# Vault PKI backend test
#
#   - Generates CA, certs, etc.
#   - Revokes certs
#   - Tidies CRL via API
#
# shellcheck disable=SC2086,SC1090,SC1091

HERE="$(pwd)"
SKYDOME="$(while [ "$HERE" != "/" ] ; do HERE=$(dirname "$HERE"); find "$HERE" -maxdepth 1 -name skydome; done)"
if [ -z "$SKYDOME" ]; then
  SKYDOME=./skydome
fi
. $SKYDOME

export i=0
export serials="cert_serials.txt"

_new_pki() {
  rm -f ${serials} > /dev/null 2>&1

  if vault mounts | grep pki; then
      msg info "PKI backend mounted already";
    else
      vault mount pki;
  fi

  vault mount-tune -max-lease-ttl=87600h pki

  vault write pki/root/generate/internal common_name=vaultron.local ttl=87600h

  vault write pki/config/urls \
  issuing_certificates="$VAULT_ADDR/v1/pki/ca" \
  crl_distribution_points="$VAULT_ADDR/v1/pki/crl"

  vault write pki/roles/vaultron-local \
    allowed_domains="vaultron.local" \
    allow_subdomains="true" max_ttl="2m"
}

_gen_certs() {
  for c in {1..50}; do
    vault write pki/issue/vaultron-local common_name=taco-x$c.vaultron.local \
    | grep serial_number | cut -d ' ' -f4 | tr -d "\t" | tee -a ${serials}
  done
}

_revoke_cert() {
  curl -X POST "$VAULT_ADDR"/v1/pki/revoke \
    -H "X-Vault-Token: $VAULT_TOKEN" \
    -d '{"serial_number":"'$1'"}'
}

## generate

_gen_500() {
  msg info "Attempting to generate 500 certs ..."
  for i in {1..10}; do
      _gen_certs &
  done
}

_gen_100() {
  msg info "Attempting to generate 100 certs ..."
  for i in {1..2}; do
      _gen_certs &
  done
}

## revoke

_revoke_all() {
  while read -r s; do
    _revoke_cert "${s}"
  done <${serials}
}

## clean

_tidy_pki() {
  curl "$VAULT_ADDR"/v1/pki/tidy \
    -H "X-Vault-Token: $VAULT_TOKEN" \
    -d '{"safety_buffer": "1m","tidy_revocation_list": true}'
}

## New cycle

#_new_pki
#_gen_certs
#_revoke_certs
#_clean

## Individual tests

#_gen_100
#_revoke_all
#_tidy_pki

msg success "Done!"
