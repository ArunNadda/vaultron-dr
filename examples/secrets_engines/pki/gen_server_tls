#!/bin/sh

## Issue Certificates

## Vaultron uses a private Docker network with predictable address space and we will issue a certificate per container with the loopback IP, static IP as an IP SANs value.

## Vault Server
## Let's make certificates for the Vault servers; we'll use a 19800h/825 day TTL for all of them:


vault write \
  vaultron-int-pki/issue/vaultron-int \
  common_name=vaults0.node.arus.consul \
  alt_names=active.vault.service.consul,standby.vault.service.consul,vault.service.consul,vaults0.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.200" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="vault-server-0.crt"} /RSA/ {out="vault-server-0.key"} { print > out }'


vault write \
  vaultron-int-pki/issue/vaultron-int \
  common_name=vaults1.node.arus.consul \
  alt_names=vaults1.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.201" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="vault-server-1.crt"} /RSA/ {out="vault-server-1.key"} { print > out }'


vault write \
  vaultron-int-pki/issue/vaultron-int \
  common_name=vaults2.node.arus.consul \
  alt_names=vaults2.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.202" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="vault-server-2.crt"} /RSA/ {out="vault-server-2.key"} { print > out }'


## Consul Servers
## Let's make certificates for the Consul servers; we'll use a 19800h/825 day TTL for all of them:


vault write vaultron-int-pki/issue/vaultron-int \
  common_name=consuls0.node.arus.consul \
  alt_names=consul.service.consul,consuls0.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.100" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="consul-server-0.crt"} /RSA/ {out="consul-server-0.key"} { print > out }'



vault write vaultron-int-pki/issue/vaultron-int \
  common_name=consuls1.node.arus.consul \
  alt_names=consul.service.consul,consuls1.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.101" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="consul-server-1.crt"} /RSA/ {out="consul-server-1.key"} { print > out }'



vault write vaultron-int-pki/issue/vaultron-int \
  common_name=consuls2.node.arus.consul \
  alt_names=consul.service.consul,consuls2.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.102" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="consul-server-2.crt"} /RSA/ {out="consul-server-2.key"} { print > out }'


## Consul Clients
## Let's make certificates for the Consul clients; we'll use a 19800h/825 day TTL for all of them:


vault write vaultron-int-pki/issue/vaultron-int \
  common_name=consulc0.node.arus.consul \
  alt_names=consul.service.consul,consulc0.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.40" \ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="consul-client-0.crt"} /RSA/ {out="consul-client-0.key"} { print > out }'



vault write vaultron-int-pki/issue/vaultron-int \
  common_name=consulc1.node.arus.consul \
  alt_names=consul.service.consul,consulc1.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.41" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="consul-client-1.crt"} /RSA/ {out="consul-client-1.key"} { print > out }'



vault write vaultron-int-pki/issue/vaultron-int \
  common_name=consulc2.node.arus.consul \
  alt_names=consul.service.consul,consulc2.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.42" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="consul-client-2.crt"} /RSA/ {out="consul-client-2.key"} { print > out }'


## Create Grafana Certificate

vault write vaultron-int-pki/issue/vaultron-int \
  common_name=grafana.node.arus.consul \
  alt_names=grafana.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.220" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="grafana.crt"} /RSA/ {out="grafana.key"} { print > out }'


## Create LDAP Certificate


vault write vaultron-int-pki/issue/vaultron-int \
  common_name=ldap.node.arus.consul \
  alt_names=ldap.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.221" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="ldap.crt"} /RSA/ {out="ldap.key"} { print > out }'


## Create MongoDB Certificate


vault write vaultron-int-pki/issue/vaultron-int \
  common_name=mongodb.node.arus.consul \
  alt_names=mongodb.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.222" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="mongodb.crt"} /RSA/ {out="mongodb.key"} { print > out }'


## Create MySQL Certificate


vault write vaultron-int-pki/issue/vaultron-int \
  common_name=mysql.node.arus.consul \
  alt_names=mysql.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.223" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="mysql.crt"} /RSA/ {out="mysql.key"} { print > out }'


## Create PostgreSQL Certificate


vault write vaultron-int-pki/issue/vaultron-int \
  common_name=postgresql.node.arus.consul \
  alt_names=postgresql.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.224" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="postgresql.crt"} /RSA/ {out="postgresql.key"} { print > out }'


## Create Prometheus Certificate


vault write vaultron-int-pki/issue/vaultron-int \
  common_name=prometheus.node.arus.consul \
  alt_names=prometheus.node.consul,server.arus.consul,localhost \
  ip_sans="127.0.0.1,10.10.42.225" \
  ttl=19800h \
  -format=json \
  | jq -r '.data.certificate + "\n" + .data.private_key' \
  | awk '/CERTIFICATE/ {out="prometheus.crt"} /RSA/ {out="prometheus.key"} { print > out }'

